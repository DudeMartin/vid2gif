@import url(https://fonts.googleapis.com/css2?family=Public+Sans:ital,wght@1,200&display=swap);

html {
  font-family: "Public Sans", sans-serif;
  font-style: italic;
  font-weight: 200;
}

canvas {
  height: 100%;
  position: absolute;
  touch-action: none;
  width: 100%;
}

button {
  font: inherit;
}

details[open] summary {
  margin-bottom: 0.125rem;
}

label {
  font-weight: bold;
  margin-right: 0.5ch;
}

legend {
  background: black;
  color: white;
  padding: 0.2rem 0.5ch;
}

.centered {
  margin-left: auto;
  margin-right: auto;
}

.action-panel {
  display: flex;
  flex-direction: column;
  flex-grow: 1;
  gap: 0.35rem;
  padding: 0.35rem;
}

.action-panel form {
  margin-bottom: 0.35rem;
}

.action-panel form input {
  margin-right: 0.5ch;
}

.action-panel input[type=text] {
  width: 10ch;
}

.gif-container {
  overflow-x: scroll;
  white-space: nowrap;
}

.gif-container div {
  display: inline-block;
  margin: 5px;
  position: relative;
}

.gif-container div:hover {
  border-style: outset;
}

.gif-container img {
  max-height: 25vh;
}

.gif-container div:hover img {
  max-height: 27.5vh;
}

.gif-container button {
  background: transparent;
  border: 0;
  color: red;
  display: none;
  font-size: 2rem;
  padding: 0;
  position: absolute;
  right: 0.25ch;
  top: 0.125rem;
}

.gif-container div:hover button {
  display: block;
}

.gif-modal {
  border: none;
  border-radius: 5px;
  box-shadow: 10px 5px 5px grey;
}

.gif-modal img {
  display: block;
  max-height: 85dvh;
  max-width: 85dvw;
}

.gif-modal button {
  margin-top: 10px;
}

.preview-container div {
  display: flex;
  gap: 1ch;
  justify-content: space-between;
  margin-top: 10px;
}

#video-select-area {
  align-items: center;
  background: #eee;
  border-radius: 5px;
  display: flex;
  flex-direction: column;
  gap: 10%;
  height: 25vh;
  justify-content: center;
  padding: 1%;
  margin-bottom: 10px;
  text-align: center;
  width: 80%;
}

#video-select-area:hover,
#video-select-area.video-select-hover {
  background: #ddd;
}

#video-select-area[data-state=shrink] {
  height: fit-content;
  min-height: 5vh;
}

#video-select-area > span {
  font-size: 1.5rem;
}

#video-select-area[data-state=shrink] > span {
  font-size: 1.2rem;
}

#error-message {
  color: red;
}

#main-container {
  display: flex;
  flex-wrap: wrap;
}

#main-container[data-state=hide] {
  display: none;
}

#video-container {
  display: inline-block;
  position: relative;
}

#video-player {
  max-height: 125vh;
  max-width: 95vw;
}

#video-controls {
  --video-controls-width: 90%;
  align-items: center;
  background: #777777a0;
  border: 1px solid;
  border-radius: 5px;
  display: flex;
  justify-content: center;
  left: calc((100% - var(--video-controls-width)) / 2);
  position: absolute;
  transform: translateY(calc(-100% - 0.75rem));
  width: var(--video-controls-width);
}

#video-controls button {
  aspect-ratio: 1;
  background-color: transparent;
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  border: none;
  height: 2.5rem;
}

#progress-container {
  --tooltip-x: 0;
  display: flex;
  flex-direction: column;
  position: relative;
  width: 100%;
}

#progress-container::before,
#progress-container::after {
  --tooltip-arrow-size: 10px;
  --tooltip-color: black;
  position: absolute;
  transform: translateX(calc(var(--tooltip-x) - 50%)) translateY(var(--tooltip-y, 0));
}

#progress-container:hover::before {
  --tooltip-y: calc(-100% - var(--tooltip-arrow-size));
  background: var(--tooltip-color);
  color: white;
  content: attr(data-tooltip);
  font-size: 1.2rem;
  padding: 0.25rem;
}

#progress-container:hover::after {
  --tooltip-y: calc(-1 * var(--tooltip-arrow-size));
  border: var(--tooltip-arrow-size) solid transparent;
  border-top-color: var(--tooltip-color);
  content: "";
}

#video-progress {
  width: 100%;
}

#video-time-display {
  font-size: 1.1rem;
}

#record-button[data-state=record]::after {
  content: "Record";
}

#record-button[data-state=stop]::after {
  animation: recording-text 3s infinite;
  content: "Recording";
}

#crop-button[data-state=crop]::after {
  content: "Crop";
}

#crop-button[data-state=stop]::after {
  content: "Setting...";
}

@keyframes recording-text {
  25% {
    content: "Recording.";
  }
  50% {
    content: "Recording..";
  }
  75% {
    content: "Recording...";
  }
}

@media only screen and (max-width: 600px) {
  h1 {
    margin-left: 2%;
  }

  body {
    margin: 0;
  }

  #video-container {
    line-height: 0;
  }

  #video-controls {
    border: 0;
    border-radius: 0;
    left: 0;
    line-height: normal;
    transform: translateY(-100%);
    width: 100%;
  }

  #video-player {
    max-width: 100vw;
  }
}
